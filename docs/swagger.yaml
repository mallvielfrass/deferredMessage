definitions:
  bot.BotRequest:
    properties:
      botLink:
        type: string
      name:
        type: string
      platform:
        type: string
      token:
        type: string
    required:
    - name
    - platform
    type: object
  bot.BotResponse:
    properties:
      _id:
        type: string
      botLink:
        type: string
      creator:
        type: string
      name:
        type: string
      platform:
        type: string
      token:
        type: string
    required:
    - name
    - platform
    type: object
  bot.BotStructResponse:
    properties:
      bot:
        $ref: '#/definitions/bot.BotResponse'
    type: object
  bot.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  user.MessageResponse:
    properties:
      message:
        example: pong
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/user/ping:
    get:
      consumes:
      - application/json
      description: Returns a "pong" message
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.MessageResponse'
      security:
      - Bearer: []
      summary: Ping
      tags:
      - user
  /api/bot/:
    post:
      consumes:
      - application/json
      description: Create a new bot with the provided information
      parameters:
      - description: Bot request body
        in: body
        name: botRequest
        required: true
        schema:
          $ref: '#/definitions/bot.BotRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Bot created successfully
          schema:
            $ref: '#/definitions/bot.BotStructResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/bot.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/bot.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new bot
      tags:
      - Bot
  /tapi/example/helloworld:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ping example
      tags:
      - example
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
